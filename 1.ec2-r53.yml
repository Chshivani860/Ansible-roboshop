- name: create ec2 instance and r53
  hosts: local
  connection: local

  vars:
    ami_id: ami-09c813fb71547fc4f
    sg_id: sg-0322f8df90fa2e7d7
    zone_id: Z0331201LO8VIYKIIHQI
    domain_name: chokka.space
    instance:
    - mongodb
    - mysql

  tasks:
  - name: create ec2 instance
    amazon.aws.ec2_instance:
      name: " {{ item }}"
      instance_type: t2.micro
      security_group: "{{ sg_id }}"
      image_id: "{{ ami_id }}"
      tags:
        name: "{{ item }}"
    loop: "{{ instance }}"
    register: ec2_output

  # - name: print  ec2_output 
  #   ansible.builtin.debug:
  #     msg: "{{ ec2_output }}"

  # - name: print public_ip
  #   ansible.builtin.debug:
  #     msg: " PublicIP: {{ item.instances[0].public_ip_address}}"
  #   loop: "{{ ec2_output.results }}"


  # - name: print private_ip
  #   ansible.builtin.debug:
  #     msg: " PrivateIP: {{ item.instances[0].private_ip_address}}"
  #   loop: "{{ ec2_output.results }}"

  - name: create route53 record
    amazon.aws.route53:
      state: present
      zone: "{{ domain_name }}"
      record: "{{ item.item }}.{{ domain_name }}" 
      type: A
      ttl: 1
      value: "{{ item.instances[0].private_ip_address }}"
      overwrite: true
    loop: "{{ ec2_output.results }}"


  - name: create route53 record for frontend
    amazon.aws.route53:
      state: present
      zone: "{{ domain_name }}"
      record: "{{ domain_name }}" 
      type: A
      ttl: 1
      value: "{{ item.instances[0].public_ip_address }}"
      overwrite: true
    when: item.item = "frontend"
    loop: "{{ ec2_output.results }}"